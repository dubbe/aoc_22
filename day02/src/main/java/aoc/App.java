/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package aoc;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.stream.Collectors;

public class App {
    private final List<String> input;
    private Map<String, Integer> pointsTable;
    private Map<String, Integer> opponentMove;

    public App(List<String> input) {
        this.input = input;
        this.pointsTable = new HashMap<String, Integer>();
        this.opponentMove = new HashMap<String, Integer>();
        this.pointsTable.put("X", 0);
        this.pointsTable.put("Y", 1);
        this.pointsTable.put("Z", 2);

        this.opponentMove.put("A", 0);  // Rock
        this.opponentMove.put("B", 1);  // Paper
        this.opponentMove.put("C", 2);  // Scissors

    }

    public Integer getSolutionPart1() {
        int points = 0;
        for(String move : input) {
            int p = 0;
            String[] moves = move.split(" ");
            p = p + pointsTable.get(moves[1]) + 1;
            int winner = (3 + pointsTable.get(moves[1]) - opponentMove.get(moves[0])) % 3;
            if(winner == 1) {
                p = p + 6;
            } else if (winner == 0) {
                p = p + 3;
            }
            points = points + p;
        }
        return points;
    }

    public Integer getSolutionPart2() {
        int points = 0;
        for(String move : input) {
            int p = 0;
            String[] moves = move.split(" ");


            if(Objects.equals(moves[1], "X")) {
                // I need to lose
                if(Objects.equals(moves[0], "A")) {
                    p=p+3;
                } else if (Objects.equals(moves[0], "B")) {
                    p = p+1;
                } else {
                    p=p+2;
                }
            } else if (Objects.equals(moves[1], "Y")) {
                // this needs a draw
                p = p + 3;
                p = p + opponentMove.get(moves[0]) + 1;
            } else {
                // I need to win
                if(Objects.equals(moves[0], "A")) {
                    p=p+2;
                } else if (Objects.equals(moves[0], "B")) {
                    p = p+3;
                } else {
                    p=p+1;
                }
                p = p + 6;
            }
            points = points + p;
        }
        return points;
    }

    public static void main(String[] args) throws IOException {
        List<String> input = parseInput("input.txt");
        String part = System.getenv("part") == null ? "part1" : System.getenv("part");
        if (part.equals("part2"))
            System.out.println(new App(input).getSolutionPart2());
        else
            System.out.println(new App(input).getSolutionPart1());
    }

    private static List<String> parseInput(String filename) throws IOException {
        return Files.lines(Path.of(filename))
                .collect(Collectors.toList());
    }
}
