/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package aoc;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.List;
import java.util.stream.Collectors;

public class App {
    private final List<String> input;

    public App(List<String> input) {
        this.input = input;
    }

    public Integer getSolutionPart1() {
        int sum = 0;
        int total = 0;
        for(String n : input) {
            if(!n.isEmpty()) {
                int in=Integer.parseInt(n);
                total = in + total;
            } else {
                if(total > sum) {
                    sum = total;
                }
                total = 0;
            }
        }
        return sum;
    }

    public Integer getSolutionPart2() {
        int[] high = {0,0,0};
        int total = 0;
        for(String n : input) {
            if(!n.isEmpty()) {
                int in=Integer.parseInt(n);
                total = in + total;
            } else {

                readHighscore(total, high);
                total = 0;
            }
        }

        readHighscore(total, high);

        return high[0]+high[1]+high[2];
    }

    private static void readHighscore(Integer curr, int[] high) {
        if(curr > high[0]) {
            high[2] = high[1];
            high[1] = high[0];
            high[0] = curr;
        }
        else if(curr > high[1]) {
            high[2] = high[1];
            high[1] = curr;
        }else if(curr > high[2]) {
            high[2] = curr;
        }

    }

    public static void main(String[] args) throws IOException {
        System.out.println("java");
        List<String> input = parseInput("input.txt");
        String part = System.getenv("part") == null ? "part1" : System.getenv("part");
        if (part.equals("part2"))
            System.out.println(new App(input).getSolutionPart2());
        else
            System.out.println(new App(input).getSolutionPart1());
    }

    private static List<String> parseInput(String filename) throws IOException {
        return Files.lines(Path.of(filename))
                .collect(Collectors.toList());
    }
}
